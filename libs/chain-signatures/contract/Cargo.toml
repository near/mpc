[package]
name = "mpc-contract"
version = "2.2.0-rc.1"
edition = "2021"
license = "MIT"
repository = "https://github.com/near/mpc"

[lib]
crate-type = ["cdylib", "lib"]

# fields to configure build with WASM reproducibility, according to specs
# in https://github.com/near/NEPs/blob/master/neps/nep-0330.md
[package.metadata.near.reproducible_build]
# docker image, descriptor of build environment
image = "sourcescan/cargo-near:0.16.1-rust-1.86.0"
# tag after colon above serves only descriptive purpose; image is identified by digest
image_digest = "sha256:5dff91e3271ace8e679dec5c12b724108c43c2c441a52ba7c94d7ee9e20a87de"
# list of environment variables names, whose values, if set, will be used as external build parameters
# in a reproducible manner
# supported by `sourcescan/cargo-near:0.10.1-rust-1.82.0` image or later images
passed_env = []
# build command inside of docker container
# if docker image from default gallery is used https://hub.docker.com/r/sourcescan/cargo-near/tags,
# the command may be any combination of flags of `cargo-near`,
# supported by respective version of binary inside the container besides `--no-locked` flag
container_build_command = [
    "cargo",
    "near",
    "build",
 # this is counter intuitive, but it correctly follows the docs,
 # the non-reproducible build inside a reproducible environment becomes reproducible
    "non-reproducible-wasm", 
    "--locked",
    "--features", "abi",
    "--no-embed-abi"
]

[dependencies]
anyhow = "1"
curve25519-dalek = { version = "4.1.3", features = [
    "group",
    "serde",
], default-features = false }
borsh = "1.5.0"
derive_more = { version = "2.0.1", features = ["from"] }
near-sdk = { version = "5.15.1", features = [
    "legacy",
    "unit-testing",
    "unstable",
] }
rand = { version = "0.8", optional = true }
serde = { version = "1", features = ["derive"] }
serde_with = { version = "3.12.0" }
serde_json = "1"
schemars = "0.8"
k256 = { version = "0.13.4", features = [
    "sha256",
    "ecdsa",
    "serde",
    "arithmetic",
    "expose-field",
] }
mpc-primitives = { path = "../../../crates/primitives" }
attestation = { path = "../../../attestation" }
near-gas = { version = "0.2.5", features = ["serde", "borsh", "schemars"] }
near-account-id = "1.1.1"
thiserror = "1"
sha3 = "0.10.8"
hex = "0.4.3"
serde_yaml = "0.9.34"

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2.12", features = ["custom"] }


[dev-dependencies]
assert_matches = "1.5.0"
rand = "0.8"
tokio = { version = "1", features = ["full"] }
sha2 = "0.10.8"
reqwest = { version = "0.11", features = ["json"] }
base64 = "0.21"
test_utils = { path = "../../../test_utils" }

# crypto dependencies
ed25519-dalek = { version = "2.1.1", features = ["serde", "digest"] }
ecdsa = { version = "0.16.9", features = ["digest", "hazmat"] }
signature = "2.2.0"
digest = "0.10.7"

near-workspaces = "0.18"
near-primitives = "=0.29.2" # not entirely clear why this is needed but otherwise tests don't compile
threshold-signatures = { git = "https://github.com/near/threshold-signatures", rev = "5fd9fe7d45db3b653d300d393b95719f6fc219b3"}
fs2 = "0.4"
rstest = "0.25.0"

[features]
test-utils = ["rand"]
dev-utils = []
abi = ["borsh/unstable__schema", "mpc-primitives/abi", "attestation/abi"]
# This is used when running `cargo clippy --all-features`, because otherwise `abi` feat will break compilation.
# But we can't put it under `abi` feat either, because it should appear only when building schema. In other words,
# if it appears under wasm32 target, it will break compilation too.
__abi-generate = ["near-sdk/__abi-generate"]